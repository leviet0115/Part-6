{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAll } from \"../services/anecdote\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\n\nconst getAnec = async () => {\n  return await getAll();\n};\n\nconst initialState = getAnec();\nexport const anecdoteSlice = createSlice({\n  name: \"anecdote\",\n  initialState,\n  reducers: {\n    voting(state, action) {\n      const id = action.payload;\n      const anec = state.find(anec => anec.id === id);\n      const changedAnec = { ...anec,\n        votes: anec.votes + 1\n      };\n      return state.map(anec => anec.id === id ? changedAnec : anec);\n    },\n\n    addNewAnec(state, action) {\n      const newAnec = asObject(action.payload);\n      return state.concat(newAnec);\n    },\n\n    addAnecs(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  voting,\n  addNewAnec,\n  addAnecs\n} = anecdoteSlice.actions;","map":{"version":3,"sources":["/Users/le.viet/Part-6/redux-anecdotes-main/src/reducers/anecdoteReducer.js"],"names":["createSlice","getAll","getId","Math","random","toFixed","asObject","anecdote","content","id","votes","getAnec","initialState","anecdoteSlice","name","reducers","voting","state","action","payload","anec","find","changedAnec","map","addNewAnec","newAnec","concat","addAnecs","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,MAAMC,KAAK,GAAG,MAAM,CAAC,SAASC,IAAI,CAACC,MAAL,EAAV,EAAyBC,OAAzB,CAAiC,CAAjC,CAApB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAED,QADJ;AAELE,IAAAA,EAAE,EAAEP,KAAK,EAFJ;AAGLQ,IAAAA,KAAK,EAAE;AAHF,GAAP;AAKD,CAND;;AAQA,MAAMC,OAAO,GAAG,YAAY;AAC1B,SAAO,MAAMV,MAAM,EAAnB;AACD,CAFD;;AAIA,MAAMW,YAAY,GAAGD,OAAO,EAA5B;AAEA,OAAO,MAAME,aAAa,GAAGb,WAAW,CAAC;AACvCc,EAAAA,IAAI,EAAE,UADiC;AAEvCF,EAAAA,YAFuC;AAGvCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpB,YAAMT,EAAE,GAAGS,MAAM,CAACC,OAAlB;AACA,YAAMC,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYA,EAAjC,CAAb;AACA,YAAMa,WAAW,GAAG,EAAE,GAAGF,IAAL;AAAWV,QAAAA,KAAK,EAAEU,IAAI,CAACV,KAAL,GAAa;AAA/B,OAApB;AACA,aAAOO,KAAK,CAACM,GAAN,CAAWH,IAAD,IAAWA,IAAI,CAACX,EAAL,KAAYA,EAAZ,GAAiBa,WAAjB,GAA+BF,IAApD,CAAP;AACD,KANO;;AAQRI,IAAAA,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAMO,OAAO,GAAGnB,QAAQ,CAACY,MAAM,CAACC,OAAR,CAAxB;AACA,aAAOF,KAAK,CAACS,MAAN,CAAaD,OAAb,CAAP;AACD,KAXO;;AAaRE,IAAAA,QAAQ,CAACV,KAAD,EAAQC,MAAR,EAAgB;AACtB,aAAOA,MAAM,CAACC,OAAd;AACD;;AAfO;AAH6B,CAAD,CAAjC;AAsBP,OAAO,MAAM;AAAEH,EAAAA,MAAF;AAAUQ,EAAAA,UAAV;AAAsBG,EAAAA;AAAtB,IAAmCd,aAAa,CAACe,OAAvD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAll } from \"../services/anecdote\";\n\nconst getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0,\n  };\n};\n\nconst getAnec = async () => {\n  return await getAll();\n};\n\nconst initialState = getAnec();\n\nexport const anecdoteSlice = createSlice({\n  name: \"anecdote\",\n  initialState,\n  reducers: {\n    voting(state, action) {\n      const id = action.payload;\n      const anec = state.find((anec) => anec.id === id);\n      const changedAnec = { ...anec, votes: anec.votes + 1 };\n      return state.map((anec) => (anec.id === id ? changedAnec : anec));\n    },\n\n    addNewAnec(state, action) {\n      const newAnec = asObject(action.payload);\n      return state.concat(newAnec);\n    },\n\n    addAnecs(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { voting, addNewAnec, addAnecs } = anecdoteSlice.actions;\n"]},"metadata":{},"sourceType":"module"}