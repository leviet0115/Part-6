{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isOn: false,\n  msg: \"\",\n  timeoutId: undefined\n};\nexport const notiSlice = createSlice({\n  name: \"notification\",\n  initialState,\n  reducers: {\n    turnOn(state, action) {\n      return {\n        isOn: true,\n        msg: action.payload\n      };\n    },\n\n    turnOff(state, action) {\n      return initialState;\n    },\n\n    setTimeoutId(state, action) {\n      return { ...state,\n        timeoutId: action.payload\n      };\n    }\n\n  }\n});\nexport const setNotification = (msg, time) => {\n  return async (dispatch, getState) => {\n    const currentId = getState().notification.timeoutId;\n\n    if (typeof currentId === \"number\") {\n      clearTimeout(currentId);\n    }\n\n    dispatch(turnOn(msg));\n    const timeoutId = setTimeout(() => {\n      dispatch(turnOff());\n      dispatch(setTimeoutId(undefined));\n    }, time * 1000);\n    dispatch(setTimeoutId(timeoutId));\n    console.log(\"noti off\");\n  };\n};\nexport const {\n  turnOff,\n  turnOn,\n  setTimeoutId\n} = notiSlice.actions;","map":{"version":3,"sources":["/Users/le.viet/Part-6/redux-anecdotes-main/src/reducers/notificationReducer.js"],"names":["createSlice","initialState","isOn","msg","timeoutId","undefined","notiSlice","name","reducers","turnOn","state","action","payload","turnOff","setTimeoutId","setNotification","time","dispatch","getState","currentId","notification","clearTimeout","setTimeout","console","log","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,SAAS,EAAEC;AAHQ,CAArB;AAKA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,cAD6B;AAEnCN,EAAAA,YAFmC;AAGnCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACpB,aAAO;AACLT,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,GAAG,EAAEQ,MAAM,CAACC;AAFP,OAAP;AAID,KANO;;AAQRC,IAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACrB,aAAOV,YAAP;AACD,KAVO;;AAYRa,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAO,EAAE,GAAGD,KAAL;AAAYN,QAAAA,SAAS,EAAEO,MAAM,CAACC;AAA9B,OAAP;AACD;;AAdO;AAHyB,CAAD,CAA7B;AAqBP,OAAO,MAAMG,eAAe,GAAG,CAACZ,GAAD,EAAMa,IAAN,KAAe;AAC5C,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAMC,SAAS,GAAGD,QAAQ,GAAGE,YAAX,CAAwBhB,SAA1C;;AAEA,QAAI,OAAOe,SAAP,KAAqB,QAAzB,EAAmC;AACjCE,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD;;AAEDF,IAAAA,QAAQ,CAACR,MAAM,CAACN,GAAD,CAAP,CAAR;AAEA,UAAMC,SAAS,GAAGkB,UAAU,CAAC,MAAM;AACjCL,MAAAA,QAAQ,CAACJ,OAAO,EAAR,CAAR;AACAI,MAAAA,QAAQ,CAACH,YAAY,CAACT,SAAD,CAAb,CAAR;AACD,KAH2B,EAGzBW,IAAI,GAAG,IAHkB,CAA5B;AAKAC,IAAAA,QAAQ,CAACH,YAAY,CAACV,SAAD,CAAb,CAAR;AAEAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAM;AAAEX,EAAAA,OAAF;AAAWJ,EAAAA,MAAX;AAAmBK,EAAAA;AAAnB,IAAoCR,SAAS,CAACmB,OAApD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isOn: false,\n  msg: \"\",\n  timeoutId: undefined,\n};\nexport const notiSlice = createSlice({\n  name: \"notification\",\n  initialState,\n  reducers: {\n    turnOn(state, action) {\n      return {\n        isOn: true,\n        msg: action.payload,\n      };\n    },\n\n    turnOff(state, action) {\n      return initialState;\n    },\n\n    setTimeoutId(state, action) {\n      return { ...state, timeoutId: action.payload };\n    },\n  },\n});\n\nexport const setNotification = (msg, time) => {\n  return async (dispatch, getState) => {\n    const currentId = getState().notification.timeoutId;\n\n    if (typeof currentId === \"number\") {\n      clearTimeout(currentId);\n    }\n\n    dispatch(turnOn(msg));\n\n    const timeoutId = setTimeout(() => {\n      dispatch(turnOff());\n      dispatch(setTimeoutId(undefined));\n    }, time * 1000);\n\n    dispatch(setTimeoutId(timeoutId));\n\n    console.log(\"noti off\");\n  };\n};\n\nexport const { turnOff, turnOn, setTimeoutId } = notiSlice.actions;\n"]},"metadata":{},"sourceType":"module"}