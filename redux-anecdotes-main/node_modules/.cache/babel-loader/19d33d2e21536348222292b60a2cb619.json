{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { anecServices } from \"../services/anecdote\"; //const getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    votes: 0\n  };\n};\n\nexport const anecdoteSlice = createSlice({\n  name: \"anecdote\",\n  initialState: [],\n  reducers: {\n    addNewAnec(state, action) {\n      return state.concat(action.payload);\n    },\n\n    addAnecs(state, action) {\n      return action.payload;\n    },\n\n    replaceAnec(state, action) {\n      const newAnec = action.payload;\n      return state.map(anec => anec.id === newAnec.id ? newAnec : anec);\n    }\n\n  }\n});\nexport const initializeAnec = () => {\n  return async dispatch => {\n    const anecdotes = await anecServices.getAll();\n    dispatch(addAnecs(anecdotes));\n  };\n};\nexport const createAnec = anec => {\n  return async dispatch => {\n    const newAnec = await anecServices.saveAnec(asObject(anec));\n    console.log(newAnec);\n    dispatch(addNewAnec(newAnec));\n  };\n};\nexport const saveVote = id => {\n  return async (dispatch, getState) => {\n    const anecdotes = getState().anecdote;\n    const anec = anecdotes.find(anec => anec.id === id);\n    const changedAnec = { ...anec,\n      votes: anec.votes + 1\n    };\n    const res = await anecServices.saveVote(id, changedAnec);\n  };\n};\nexport const {\n  voting,\n  addNewAnec,\n  addAnecs\n} = anecdoteSlice.actions;","map":{"version":3,"sources":["/Users/le.viet/Part-6/redux-anecdotes-main/src/reducers/anecdoteReducer.js"],"names":["createSlice","anecServices","asObject","anecdote","content","votes","anecdoteSlice","name","initialState","reducers","addNewAnec","state","action","concat","payload","addAnecs","replaceAnec","newAnec","map","anec","id","initializeAnec","dispatch","anecdotes","getAll","createAnec","saveAnec","console","log","saveVote","getState","find","changedAnec","res","voting","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,sBAA7B,C,CAEA;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAED,QADJ;AAELE,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID,CALD;;AAOA,OAAO,MAAMC,aAAa,GAAGN,WAAW,CAAC;AACvCO,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE,EAFyB;AAGvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,aAAOD,KAAK,CAACE,MAAN,CAAaD,MAAM,CAACE,OAApB,CAAP;AACD,KAHO;;AAKRC,IAAAA,QAAQ,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACtB,aAAOA,MAAM,CAACE,OAAd;AACD,KAPO;;AASRE,IAAAA,WAAW,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMK,OAAO,GAAGL,MAAM,CAACE,OAAvB;AACA,aAAOH,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,EAAL,KAAYH,OAAO,CAACG,EAApB,GAAyBH,OAAzB,GAAmCE,IAAxD,CAAP;AACD;;AAZO;AAH6B,CAAD,CAAjC;AAmBP,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,MAAMtB,YAAY,CAACuB,MAAb,EAAxB;AACAF,IAAAA,QAAQ,CAACP,QAAQ,CAACQ,SAAD,CAAT,CAAR;AACD,GAHD;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIN,IAAD,IAAU;AAClC,SAAO,MAAOG,QAAP,IAAoB;AACzB,UAAML,OAAO,GAAG,MAAMhB,YAAY,CAACyB,QAAb,CAAsBxB,QAAQ,CAACiB,IAAD,CAA9B,CAAtB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAK,IAAAA,QAAQ,CAACZ,UAAU,CAACO,OAAD,CAAX,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMY,QAAQ,GAAIT,EAAD,IAAQ;AAC9B,SAAO,OAAOE,QAAP,EAAiBQ,QAAjB,KAA8B;AACnC,UAAMP,SAAS,GAAGO,QAAQ,GAAG3B,QAA7B;AACA,UAAMgB,IAAI,GAAGI,SAAS,CAACQ,IAAV,CAAgBZ,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAAb;AACA,UAAMY,WAAW,GAAG,EAAE,GAAGb,IAAL;AAAWd,MAAAA,KAAK,EAAEc,IAAI,CAACd,KAAL,GAAa;AAA/B,KAApB;AACA,UAAM4B,GAAG,GAAG,MAAMhC,YAAY,CAAC4B,QAAb,CAAsBT,EAAtB,EAA0BY,WAA1B,CAAlB;AACD,GALD;AAMD,CAPM;AASP,OAAO,MAAM;AAAEE,EAAAA,MAAF;AAAUxB,EAAAA,UAAV;AAAsBK,EAAAA;AAAtB,IAAmCT,aAAa,CAAC6B,OAAvD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { anecServices } from \"../services/anecdote\";\n\n//const getId = () => (100000 * Math.random()).toFixed(0);\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    votes: 0,\n  };\n};\n\nexport const anecdoteSlice = createSlice({\n  name: \"anecdote\",\n  initialState: [],\n  reducers: {\n    addNewAnec(state, action) {\n      return state.concat(action.payload);\n    },\n\n    addAnecs(state, action) {\n      return action.payload;\n    },\n\n    replaceAnec(state, action) {\n      const newAnec = action.payload;\n      return state.map((anec) => (anec.id === newAnec.id ? newAnec : anec));\n    },\n  },\n});\n\nexport const initializeAnec = () => {\n  return async (dispatch) => {\n    const anecdotes = await anecServices.getAll();\n    dispatch(addAnecs(anecdotes));\n  };\n};\n\nexport const createAnec = (anec) => {\n  return async (dispatch) => {\n    const newAnec = await anecServices.saveAnec(asObject(anec));\n    console.log(newAnec);\n    dispatch(addNewAnec(newAnec));\n  };\n};\n\nexport const saveVote = (id) => {\n  return async (dispatch, getState) => {\n    const anecdotes = getState().anecdote;\n    const anec = anecdotes.find((anec) => anec.id === id);\n    const changedAnec = { ...anec, votes: anec.votes + 1 };\n    const res = await anecServices.saveVote(id, changedAnec);\n  };\n};\n\nexport const { voting, addNewAnec, addAnecs } = anecdoteSlice.actions;\n"]},"metadata":{},"sourceType":"module"}